// 1 반복문 for
package PR01;

public class 반복문연습1 {

	public static void main(String[] args) {
		System.out.println("[동일한 문장 반복하여 3번 출력하기]");
		for (int cnt = 0; cnt < 3; cnt++) {
			System.out.println("Hello");
		}

		System.out.println("[1에서 10까지 출력, 합계 출력]");
		int sum = 0;
		for (int cnt = 1; cnt <= 10; cnt++) {
			System.out.print(cnt + " ");
			sum += cnt;
		}
		System.out.println();
		System.out.println("합계: " + sum);

		System.out.println("[10에서 1까지 출력]");
		for (int cnt = 10; cnt >= 1; cnt--) {
			System.out.print(cnt + " ");
		}
		System.out.println();

		System.out.println("[1에서 10까지 짝수만 출력]");
		for (int cnt = 2; cnt <= 10; cnt += 2) {
			System.out.print(cnt + " ");
		}
		System.out.println();

		System.out.println("[1에서 10까지 홀수만 출력]");
		for (int cnt = 1; cnt <= 10; cnt += 2) {
			System.out.print(cnt + " ");
		}
		System.out.println();

		System.out.println("[구구단 2단 출력]");
		for (int cnt = 1; cnt <= 9; cnt++) {
			System.out.println("2 * " + cnt + " = " + (2 * cnt));
		}

		System.out.println("[구구단 9단까지 출력]");
		for (int dan = 2; dan <= 9; dan++) {
			for (int cnt = 1; cnt <= 9; cnt++) {
				System.out.println(dan + " * " + cnt + " = " + (dan * cnt));
			}
		}
	}
}
----------------------------------------------------------------------------------------------------------------
// 2 반복문 while 
package PR01;

import java.util.Scanner;

public class 반복문연습2 {

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);

		int cnt = 1;
		int sum = 0;

		System.out.println("[1에서 10까지 출력하고, 합계 출력하기]");
		while (cnt <= 10) {
			System.out.print(cnt + " ");
			sum += cnt;
			cnt++;
		}
		System.out.println();
		System.out.println("누적 합계: " + sum);
		System.out.println();

		System.out.println("[정수값을 반복해서 입력받아 화면에 출력 (0을 입력시 종료)]");
		int input;
		while (true) { // 무한 반복

			System.out.println("숫자를 입력하세요 (0은 종료)");
			input = s.nextInt();
			System.out.println("입력받은 값은 = " + input);

			if (input == 0) {
				System.out.println("종료");
				break;
			}
		}
		System.out.println();
		System.out.println("[입력받은 값이 짝수이면 누적 합계, 홀수이면 다시 입력 받기 (0 입력시 종료)]");
		int num = 0;
		int result = 0;
		while (true) {
			
			System.out.print("숫자를 입력하세요 (0은 종료) : ");
			num = s.nextInt();
			if (num == 0) {   // 0 입력시 반복문 종료
				System.out.println("종료");
				break;
			} else if (num % 2 != 0) {
				continue;      // 홀수이면 반복
			} else {
				result += num;   // 짝수인 경우는 누적 합계
			}
		}
		System.out.println("짝수 합계는 = " + result);
	}
}
----------------------------------------------------------------------------------------------------------------
// 3 배열
package PR01;

public class 배열1 {

	public static void main(String[] args) {
		// 배열의 선언
		int a [];
		int [] b;
		
		// 배열의 생성
		int c [] = new int [5];   // integer 자료형 5개를 선언
		int [] d = new int[5];   // new는 메모리를 할당
		
		int e [];   // 선언 후 
		e  = new int [5];  // 별도로 생성 가능
		
		// 배열 초기화
		int f [] = new int [5];    // 0부터 4까지
		f[0] = 10;
		f[1] = 20;
		f[2] = 30;
		f[3] = 40;
		f[4] = 50;
		
		// int [] g = new int[5] {10,20,30,40,50};   // 오류 발생
		int [] g = new int[] {10,20,30,40,50};
		int [] h = {10,20,30,40,50};
		
		int[] i;
		i = new int[] {10,20,30,40,50};
		//i = {10,20,30,40,50}; // 이렇게 하면 오류 발생
		
		// 배열 요소의 개수
		System.out.println("배열 i의 요소 개수는 " + i.length);    // 5

		int [] j = new int[] {10,20,30,40,50};  
		// j[5] = 100; // 실행 오류 -> 배열 인덱스는 배열의 개수를 넘어갈 수 없음
	}

}
----------------------------------------------------------------------------------------------------------------
// 4 배열
package PR01;

public class 배열2 {

	public static void main(String[] args) {
		// 1
		int[] a = new int[5];

		for (int i = 0; i < 5; i++) {
			a[i] = (i + 1) * 10;
			System.out.print(a[i] + " ");
		}
		System.out.println();

		// 2
		int[] b = { 34, 10, 25, 71, 80 };
		int sum = 0;

		for (int i = 0; i < 5; i++) {
			sum += b[i];
			System.out.print(b[i] + " ");
		}
		System.out.println();
		System.out.println("합계 = " + sum + ", 평균 = " + (sum / 5));

		// 3
		int[] c = { 1, 2, 3, 4, 5 };

		for (int i = 0; i < c.length; i++) {
			System.out.print(c[i] + " ");
		}
		System.out.println();

		// 4 (2개 배열의 합계 배열 만들기)
		System.out.println("[2개 배열의 합계 배열 만들기]");
		int[] arr1 = { 12, 32, 76, 51, 49 };
		int[] arr2 = { 34, 56, 29, 54, 21 };
		int[] arr3 = new int[5];

		for (int i = 0; i < arr1.length; i++) {
			arr3[i] = arr1[i] + arr2[i];
		}
		for (int i = 0; i < arr3.length; i++) {
			System.out.println(arr1[i] + " + " + arr2[i] + " = " + arr3[i]);
		}

		// 5 문자열 배열
		String[] str = new String[] { "apple", "banana", "melon" }; // 배열 선언 및 생성과 동시에 배열 요소의 값들을 지정

		String[] star = new String[3]; // 배열 선언 및 생성 후에
		star[0] = "A"; // 배열 요소의 값들을 지정하는 방법
		star[1] = "B";
		star[2] = "C";

		String[] like = new String[3];  // 배열 선언 및 생성 후에
		like[0] = new String("a");		// String 클래스를 이용하여 메모리를 할당하여 지정
		like[1] = new String("b");
		like[2] = new String("c");
		
		for(int i=0; i <like.length; i++) {   // 반복문을 통해 배열 내용을 출력
			System.out.println(like[i]);  
		}
	}
}
----------------------------------------------------------------------------------------------------------------
// 5 다차원 배열
package PR01;

public class 다차원배열1 {

	public static void main(String[] args) {
		// 1차원 배열 = 행 1개, 열 N개
		// 2차원 배열 = 행 N개, 열 N개 (= 1차원 배열이 N개)
		
		// 2차원 배열의 length 멤버 변수 (필드)
		// - 배열이름.length : 2차원 배열의 행의 개수
		// - 배열이름[행].length : 2차원 배열의 열의 개수

		int[][] a = new int[][] { { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 10, 11, 12 } }; // 3행 4열

		// 2차원 가변 배열 ( 행의 개수는 정해져 있고, 열의 개수가 가변임)
		int[][] b = new int[2][]; // 2차원 배열 선언 및 행의 개수 지정 (열은 x)
		b[0] = new int[3]; // 열의 개수 지정
		b[1] = new int[4];
		
		System.out.println(b[1].length);  // 4 출력
		System.out.println(b.length);  // 2 출력 (= 2행) 
		
		b[0][0] = 1; // 배열 요소별로 초기값 지정
		b[0][1] = 2;
		b[0][2] = 3;
		b[1][0] = 4;
		b[1][1] = 5;
		b[1][2] = 6;
		b[1][3] = 7; // 1행 3열

		// 또는 행별로 열의 개수를 생성할 때, 초기값을 지정해 주는 방법

		int[][] c = new int[2][];
		c[0] = new int[] { 1, 2, 3 };
		c[1] = new int[] { 4, 5, 6, 7 };

		// 동시에
		int[][] d = new int[][] { { 1, 2, 3 }, { 4, 5, 6, 7 } };
	}
}
----------------------------------------------------------------------------------------------------------------
