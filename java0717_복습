// 1 - 인터페이스 선언

package 인터페이스;

public interface RemoteControl {
	
	// 추상 메소드란 선언부만 있고 실행부인 중괄호가 없는 메소드를 말함!
	//public 추상 메소드
	public void turnOn();
	
}
----------------------------------------------------------------------------------------------
// 1-1 구현 클래스 선언 - Television
  
package 인터페이스;

public class Television implements RemoteControl {

	// 인터페이스에 선언된 turnOn() 추상 메소드 재정의
	@Override
	public void turnOn() {
		System.out.println("TV를 켭니다.");
		
	}
}
----------------------------------------------------------------------------------------------
// 1-2 구현 클래스 선언 - Audio
  
package 인터페이스;

public class Audio implements RemoteControl {

	@Override
	public void turnOn() {
		System.out.println("오디오를 켭니다.");
		
	}
}
----------------------------------------------------------------------------------------------
// 1-3 변수 선언과 구현 객체 대입 -> 실행
  
package 인터페이스;

public class RemoteControlExample {

	public static void main(String[] args) {
		
		// 이렇게도 가능
		//RemoteControl rc = new Television();
		//rc.turnOn();
		
		RemoteControl rc;
		
		// rc 변수에 Television 객체를 대입
		rc = new Television();
		rc.turnOn();  // TV를 켭니다.
		
		// rc 변수에 Audio 객체를 대입 (교체시킴)
		rc = new Audio();
		rc.turnOn();  // 오디오를 켭니다.

	}
}
----------------------------------------------------------------------------------------------
// 2  상수 필드

  package 인터페이스;

public interface RemoteControl {
	
	// 인터페이스는 public static final 특성을 갖는 불변의 상수 필드를 멤버로 가질 수 있다
	// [public static final] 타입 상수명 = 값;
	
	// 상수 선언
	int MAX_VOLUME = 10;
	int MIN_VOLUME = 0;
	
	// 상수는 구현 객체와 관련 없는 인터페이스 소속 멤버이므로 다음과 같이
	// 인터페이스로 바로 접근해서 상수값을 읽을 수 있다.
}
----------------------------------------------------------------------------------------------
// 2-1  실행
package 인터페이스;

public class RemoteControlExample {
	public static void main(String[] args) {
	
		System.out.println("리모콘 최대 볼륨: " + RemoteControl.MAX_VOLUME);
		System.out.println("리모콘 최저 볼륨: " + RemoteControl.MIN_VOLUME);
		
		// 출력 결과
		//리모콘 최대 볼륨: 10
		//리모콘 최저 볼륨: 0
    
	}
}
----------------------------------------------------------------------------------------------
//3 인터페이스

package 인터페이스;

public interface RemoteControl {
	
	// 상수 필드
	int MAX_VOLUME = 10;
	int MIN_VOLUME = 0;
	
	// 추상 메소드 (메소드 선언부만 작성)
	void turnOn();
	void turnOff();
	void setVolume(int volume);
	
}
----------------------------------------------------------------------------------------------
// 3-1 구현 클래스 - Television

package 인터페이스;

public class Television implements RemoteControl {

	// 필드
	private int volume;

	//turnOn() 추상 메소드 오버라이딩
	@Override
	public void turnOn() {
		System.out.println("TV를 켭니다");
	}
	
	//turnOff() 추상 메소드 오버라이딩
	@Override
	public void turnOff() {
		System.out.println("TV를 끕니다");
		
	}
	
	// setVolume() 추상 메소드 오버라이딩
	@Override
	public void setVolume(int volume) {
		// 인터페이스 상수 필드를 이용해서 volume 필드의 값을 제한
		
		if(volume>RemoteControl.MAX_VOLUME) {
			this.volume = RemoteControl.MAX_VOLUME;
		} else if (volume<RemoteControl.MIN_VOLUME) {
			this.volume = RemoteControl.MIN_VOLUME;
		} else {
			this.volume = volume;
		}
		System.out.println("현재 TV 볼륨: " + this.volume);
	}
}
----------------------------------------------------------------------------------------------
// 3-2 구현 클래스 - Audio

package 인터페이스;

public class Audio implements RemoteControl {

	// 필드
		private int volume;

		//turnOn() 추상 메소드 오버라이딩
		@Override
		public void turnOn() {
			System.out.println("Audio를 켭니다");
		}
		
		//turnOff() 추상 메소드 오버라이딩
		@Override
		public void turnOff() {
			System.out.println("Audio를 끕니다");
			
		}
		
		// setVolume() 추상 메소드 오버라이딩
		@Override
		public void setVolume(int volume) {
			if(volume>RemoteControl.MAX_VOLUME) {
				this.volume = RemoteControl.MAX_VOLUME;
			} else if (volume<RemoteControl.MIN_VOLUME) {
				this.volume = RemoteControl.MIN_VOLUME;
			} else {
				this.volume = volume;
			}
			System.out.println("현재 Audio 볼륨: " + this.volume);
		}
}
----------------------------------------------------------------------------------------------
// 3-3 실행

package 인터페이스;

public class RemoteControlExample {
	public static void main(String[] args) {
	
		// 인터페이스 변수 선언
		RemoteControl rc;
		
		// Television 객체를 생성하고 인터페이스 변수에 대입
		rc = new Television();
		rc.turnOn();
		rc.setVolume(5);
		rc.turnOff();
		
		// Audio 객체를 생성하고 인터페이스 변수에 대입
		rc = new Audio();
		rc.turnOn();
		rc.setVolume(5);
		rc.turnOff();
		
		//출력결과
		//TV를 켭니다
		//현재 TV 볼륨: 5
		//TV를 끕니다
		//Audio를 켭니다
		//현재 Audio 볼륨: 5
		//Audio를 끕니다

	}
}
----------------------------------------------------------------------------------------------
  
