//1
package sec04;

// 틀
public class Calculator {
	
	// 3
	int plus(int x, int y) {        // 합계를 구하는 메소드
		int result = x + y;
		return result;
	}
	// 2
	double avg(int x, int y) {	    // 평균을 구하는 메소드
		double sum = plus(x,y);     // 객체 내부에서 합계 메소드 호출			
		double result = sum / 2;
		return result;
	}

	// 1
	void excute() {
		double result = avg(7, 10);
		println("실행결과: " + result);      // 문자열 + 숫자 = 문자열 , println이라는 메소드임
	}
	
	// 4
	void println(String message) {
		System.out.println(message);
	}
}

//2
package sec04;

// 실행
public class CalculatorExample {

	public static void main(String[] args) {
		
		Calculator  myCalc = new Calculator() ;   // 기본 생성자 
		
		myCalc.println("가나다");         // 리턴값 x , 내부호출 x (그냥 호출하면 된다)
		
//		myCalc.plus(6, 4);       		  // X
		int result1 = myCalc.plus(6, 4);  // return값이 있으니까 받아와야함
		System.out.println(result1);	  // 출력 ( 리턴값 o, 내부호출 x)
		
//		myCalc.avg(10, 15);
		double result2 = myCalc.avg(10, 15);  // 리턴값 o, 내부호출 o
		System.out.println(result2);
		
		myCalc.excute();   				 	  //  리턴값 x, 내부호출 3번 
        // void - 리턴값 없어서 호출하고 끝남 // avg 호출, plus 호출, println 호출 => 3
		
		
	}

}

//3
package sec04;

public class Calculator2 {
	
	double areaRectangle(double width) {
		return width * width;
	}
	
	// 사각형 너비
	double areaRectangle(double width, double height) {
		return width * height;
	}
}

//4
package sec04;

public class CalculatorExample2 {

	public static void main(String[] args) {

		Calculator2 myCalc = new Calculator2();

		double result1 = myCalc.areaRectangle(3.5);
		double result2 = myCalc.areaRectangle(3.5, 7.5);

		System.out.println("정사각형 넓이 : " + result1);
		System.out.println("직사각형 넓이 : " + result2);

	}
}

//5
package sec05;

public class Calculator {
	static double pi = 3.14159;
	
	static int plus(int x, int y) {
		return x + y;
	}
	

	static int minus(int x, int y) {
		return x - y;
	}
	
	public static void main(String[] args) {
		double result1 = 10 * 10 * Calculator.pi;
		System.out.println(result1);
	}
}

//6
package sec05;

public class Car {
	
	// 멤버 필드 선언
	String model;
	int speed;
	
	//기본 생성자
	Car() {
		
	}
	
	// 매개변수 1개 생성자, 기본 생성자는 안 만들어짐
	Car(String model) {
		this.model = model;
	}
	
	// 매개변수 1개 메소드, 리턴값 없음
	void setSpeed(int speed) {
		this.speed = speed;
	}
	
	// 매개변수 없는 메소드, 리턴값 없음
	// 10부터 50까지 5번 반복해서 속도를 넣고 출력
	void run() {
		for(int i =10; i <= 50; i+=10) {
			this.setSpeed(i);
			System.out.println(this.model+"가 달립니다. (시속 : " + this.speed +"km/h");
		}
	}
	
	public static void main(String[] args) {
		Car myCar = new Car("포르쉐");
		myCar.run();
		
		// speed = 60;    불가능
		Car yourCar = new Car();
		yourCar.speed = 60;
	}


//7
package sec05;

public class Singleton {

	private static Singleton singleton = new Singleton();

	private Singleton() {
	} // 생성자

	static Singleton getInstance() {
		return singleton;
	}

	public static void main(String[] args) {
//		Singleton obj1 = new Singleton();    => 싱글톤 사용 방식이 아님
//		Singleton obj2 = new Singleton();    => 컴파일 에러. 싱글톤은 한 번만 사용 가능

		Singleton obj1 = Singleton.getInstance();
		Singleton obj2 = Singleton.getInstance();
		
		if (obj1 == obj2) {
			System.out.println("같은 객체");   // 출력 - 동일한 곳을 참조하고있음
		} else
			System.out.println("다른 객체");
	}
}

//8
package sec04;

// 268p 3번 
public class MemberService {

	String id;
	String password;

	boolean login(String id, String password) {
		if (id.equals("hong") && password.equals("12345")) {
			return true;
		} else {
			return false;
		}
	}

	void logout(String id) {
		System.out.println("로그아웃 되었습니다.");
	}

}

//9
package sec04;

public class MemberServiceExample {

	public static void main(String[] args) {
		MemberService memberService = new MemberService();
		
		boolean result = memberService.login("hong", "12345");
		if (result) {
			System.out.println("로그인 되었습니다.");
			memberService.logout("hong");
		} else {
			System.out.println("id 또는 password가 올바르지 않습니다.");
		}
	}
}

